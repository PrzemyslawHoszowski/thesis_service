version: '3.3'
networks:
  thesis:

services:
  postgres:
    image: postgres:12
    environment:
      POSTGRES_DB: thesis
      POSTGRES_USER: thesis
      POSTGRES_PASSWORD: thesis
      POSTGRES_INITDB_ARGS: -A password
    ports:
      - "5433:5432"
    networks:
      - thesis
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  web:
    build: ./app
    command: gunicorn service.wsgi:application --bind 0.0.0.0:8000
#    command: python manage.py runserver 0.0.0.0:8000
#    volumes:
#      - ./working_dir/:/usr/src/app/
    expose:
      - 8000
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - CERTIFICATE_PRIVATE_KEY_PASSWORD=${CERTIFICATE_PRIVATE_KEY_PASSWORD}
      - BLOCKCHAIN_HOST=host.docker.internal
#      - BLOCKCHAIN_CLI_GLOBAL_FLAGS=--home /run/secrets/.thesis
    depends_on:
      - postgres
    networks:
      - thesis
    volumes:
      - static_volume:/home/app/web/staticfiles
    secrets:
      - cert
      - .thesis
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
    networks:
      - thesis
    ports:
      - "1347:80"
      - "1337:443"
    depends_on:
      - web
    secrets:
      - cert
  node-1:
    image: thesis-blockchain:latest
    command: ./thesisd start
    volumes:
      - node_1_data:/home/app/
    networks:
      - thesis
    ports:
      - "26657:26657"
      - "1317:1317"
      - "26656:26656"
      - "9090:9090"
    secrets:
      - .thesis


volumes:
  postgres_data:
  static_volume:
  node_1_data:

secrets:
  cert:
    file: ./cert
  .thesis:
    file: /home/przemek/.thesis
